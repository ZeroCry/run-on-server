import fs from "fs";
import * as babel from "babel-core";
import * as t from "babel-types";
import { stripIndent } from "common-tags";
import generate from "babel-generator";

export default class IdMappingsFile {
  constructor(outputPath) {
    this.outputPath = outputPath;
  }

  add(key, expressionNode) {
    const mappings = this._load();
    mappings[key] = expressionNode;
    this._save(mappings);
  }

  _load() {
    const mappings = {};

    if (fs.existsSync(this.outputPath)) {
      const fileContent = fs.readFileSync(this.outputPath, "utf-8");

      babel.transform(fileContent, {
        babelrc: false,
        plugins: [
          () => ({
            visitor: {
              ObjectProperty(path) {
                mappings[path.node.key.value] = path.node.value;
              },
            },
          }),
        ],
      });
    }

    return mappings;
  }

  _build(mappings) {
    const outputContent = t.expressionStatement(
      t.assignmentExpression(
        "=",
        t.memberExpression(t.identifier("module"), t.identifier("exports")),
        t.objectExpression(
          Object.keys(mappings).map((key) => {
            const valueNode = mappings[key];
            const keyNode = t.stringLiteral(key);

            return t.objectProperty(keyNode, valueNode);
          })
        )
      )
    );

    const comment =
      "\n" +
      stripIndent`
        This file was generated by the run-on-server babel plugin. It should not
        be edited by hand.
      ` +
      "\n";

    const output = generate(t.program([outputContent]), {
      auxiliaryCommentBefore: comment,
    });

    return output.code;
  }

  _save(mappings) {
    fs.writeFileSync(this.outputPath, this._build(mappings));
  }
}
